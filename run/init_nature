#!/usr/bin/env python
import argparse
import os, shutil
import datetime as dt
import sys
import subprocess as sp

from glob import glob


defaultOut = os.getenv("CFS_LETKF_ROOT")+'/DATA/nature'
parser = argparse.ArgumentParser(
    formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    usage="init_nature --date DATE --path PATH [options]",
    description=(
        "Initialize the output directory for a 6 hour cycling CFS run "
        "by creating the directory structure and copying the initial conditions"))

g = parser.add_argument_group('required arguments')
g.add_argument("--date", required=True,help=(
    "initial date of the nature run, format is in YYYYMMDDHH"))
g.add_argument('--path', default=defaultOut, help=(
    "path to the output directory"))

g = parser.add_argument_group('optional arguments')
g.add_argument('--ares', type=int, choices=[62,126,190,382,574,1148], default=62, help=(
    "atmospheric resolution"))
g.add_argument('-f', action='store_true', help=(
    "force overwriting of any existing directory"))
args = parser.parse_args()
args.cfsr = os.getenv("CFSR_DIR")

## create the output directory
if os.path.exists(args.path):
    if args.f:
        print 'Removing directory...'
        shutil.rmtree(args.path)
    else:
        print ('Directory {0} already exists, remove and try again or'
               ' force removal of old directory with the "-f" option').format(args.path)
        sys.exit(1)
cdate = dt.datetime.strptime(args.date, "%Y%m%d%H")
os.makedirs(args.path+cdate.strftime("/%Y/%Y%m/%Y%m%d/%Y%m%d%H/"))


dateDirOut=cdate.strftime("/%Y/%Y%m/%Y%m%d/%Y%m%d%H/")
dateDirIn =cdate.strftime("/%Y/%Y%m/%Y%m%d/")

## copy atmosphere files
fromDirAtm = args.cfsr+'/T{0}/'.format(args.ares)
for ext in ['.sig','.sfc']:
    shutil.copy(fromDirAtm+dateDirIn+args.date+ext,
                args.path+dateDirOut)

## extract ocean files
files = ['ocean_'+x for x in (
    'frazil','freesurf','neutral','temp_salt','velocity',
    'velocity_advection', 'sbc', 'density')]
files += ('ice_model',)
outPath = args.path+dateDirOut
sp.call('tar -xaf {} {}'.format(
    args.cfsr+'/ocn_05/'+dateDirIn+'/'+args.date+'.tgz',
    "ocnanl.gdas.*.res.nc"),
        shell=True, cwd=outPath)
for f in files:
    filename = 'ocnanl.gdas.{}.{}.res.nc'.format(args.date,f)
    shutil.move(outPath+'/'+filename,
                outPath+'/{}.{}.res.nc'.format(args.date, f))
for f in glob(outPath+'/ocnanl*'):
    shutil.rmtree(f)

## copy the required configuration files
os.makedirs(args.path+'/cfg')
sp.check_call("cp $CFS_LETKF_ROOT/run/config_files/nemo.nml cfg/nemo.nml",
              shell=True, cwd=args.path)
