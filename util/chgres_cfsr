#!/usr/bin/env python
import argparse
import subprocess as sp
import os,sys, shutil
import datetime as dt
import tempfile

rootDir=os.getenv('CFS_LETKF_ROOT')
chgres_bin = rootDir+'/util/global_chgres.sh'


## Get the command line arguments
parser = argparse.ArgumentParser(description=(
    "converts a downloaded CFSR dataset into a different resolution"))
parser.add_argument('--start', required=True, help=(
    'start date of data to convert, format is "YYYYMMDDHH"'))
parser.add_argument('--end', help=(
    'end date of data to convert, format is "YYYYMMDDHH", '
    ' if no start date is given, only the start date is downloaded'))
parser.add_argument('--res', choices=['62'], default='62', help=(
    "desired spectral resolution to convert to"))
args=parser.parse_args()
if not args.end:
    args.end = args.start
args.input  = os.path.abspath(os.getenv('CFSR_DIR')+'/T126')
args.output = os.path.abspath(os.getenv('CFSR_DIR')+'/T'+args.res)
print args



## deterimine the resolutions
xy = {
    '62' : ('192','94'),
    #'128'
}
vres = '64'


## create the temporary directory
tmpdir = os.getenv('TMP_DIR_LOCAL')+'/chgres_cfsr'
if os.path.exists(tmpdir):
    shutil.rmtree(tmpdir)
os.makedirs(tmpdir)


## process all the dates
cdate = dt.datetime.strptime(args.start,'%Y%m%d%H')
edate = dt.datetime.strptime(args.end, '%Y%m%d%H')
while cdate <= edate:
    print cdate
    filepfx=cdate.strftime('/%Y/%Y%m/%Y%m%d/%Y%m%d%H')

    ## make sure the output directory exists
    outdir=os.path.dirname(args.output+filepfx)
    if not os.path.exists(outdir):
        os.makedirs(outdir)

    ## setup the environment for the chgres script
    env = os.environ.copy()
    env2 = {
        'JCAP'    : args.res,
        'LEVS'    : vres,
        'LONB'    : xy[args.res][0],
        'LONR'    : xy[args.res][0],    
        'LATB'    : xy[args.res][1],
        'LATR'    : xy[args.res][1],    
        
        'SIGINP'  : args.input+filepfx+'.sig',
        'SFCINP'  : args.input+filepfx+'.sfc',
        'SIGOUT'  : args.output+filepfx+'.sig',
        'SFCOUT'  : args.output+filepfx+'.sfc',
        
        'IDVC'    : '2',
        'IDSL'    : '1',
        'LSOIL'   : '4',
        #    'IVSSFC'  : '198410',
        'OUTTYPE' : '2',
        'IDRT'    : '4',
        
        'CLIMO_FIELDS_OPT':'3',
        'LANDICE_OPT' : '2',
        'CHGRESVARS' : 'NVCOORD=2',
        
        'EXECGLOBAL' : rootDir+'/cfs/bin',
        'FIXGLOBAL'  : os.getenv('FIX_DIR_AM'),
        'SIGLEVEL'   : os.getenv('FIX_DIR_AM')+'/global_hyblev.l{0}.txt'.format(vres),
        'OROGRAPHY'  : os.getenv('FIX_DIR_AM')+'/global_orography.t{0}.grb'.format(args.res),
    }
    env.update(env2)

    sp.call(chgres_bin, env=env, shell=True,cwd=tmpdir)

    cdate += dt.timedelta(hours=6)

shutil.rmtree(tmpdir)
